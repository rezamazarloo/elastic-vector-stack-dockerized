version: "3.9"

services:
  es-setup:
    build:
      context: ./setup
    container_name: es-setup
    profiles:
      - setup
    depends_on:
      elasticsearch:
        condition: service_healthy
    network_mode: service:elasticsearch
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-changeme}
      VECTOR_PASSWORD: ${VECTOR_PASSWORD:-changeme}
      BACKEND_PASSWORD: ${BACKEND_PASSWORD:-changeme}
    entrypoint: ["/bin/bash", "/entrypoint.dev.sh"]

  kibana-keygen:
    image: kibana:8.19.2
    container_name: kibana-keygen
    profiles:
      - setup
    network_mode: none
    command: ["bin/kibana-encryption-keys", "generate"]
    restart: no

  elasticsearch:
    image: elasticsearch:8.19.2
    container_name: elasticsearch
    # total container RAM is 1GB
    # set 512MB heap size (half of container RAM)
    deploy:
      resources:
        limits:
          memory: 1G
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      # 512MB heap size (half of container RAM)
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    # Memory locked in RAM (no swap)
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data:Z
      - ./elasticsearch/development/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elknet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: kibana:8.19.2
    container_name: kibana
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-changeme}
      KIBANA_SECURITY_ENCRYPTION_KEY: ${KIBANA_SECURITY_ENCRYPTION_KEY:-}
      KIBANA_SAVED_OBJECTS_ENCRYPTION_KEY: ${KIBANA_SAVED_OBJECTS_ENCRYPTION_KEY:-}
      KIBANA_REPORTING_ENCRYPTION_KEY: ${KIBANA_REPORTING_ENCRYPTION_KEY:-}
    ports:
      - "5600:5601"
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/development/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    networks:
      - elknet
    restart: unless-stopped
  
  vector:
    image: timberio/vector:0.49.0-debian
    container_name: vector
    environment:
      - ELASTICSEARCH_VECTOR_USER=${ELASTICSEARCH_VECTOR_USER:-}
      - ELASTICSEARCH_VECTOR_PASSWORD=${ELASTICSEARCH_VECTOR_PASSWORD:-}
    volumes:
      - ./logs:/logs:ro
      # don't use .yml unless it uses default vector.yaml and shows random output to console
      - ./vector/vector.yml:/etc/vector/vector.yaml:ro
    ports:
      - "8686:8686"  # Expose Vector API port
    networks:
      # for vector if we run it on a seperat docker compose like django app use same network with external: true
      - elknet
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  elasticsearch_data:

networks:
  elknet:
    name: elknet # to prevent renaming to <project>_<network>
    driver: bridge
